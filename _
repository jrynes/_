/**
 * Logs the session timeout warning popup time.
 *
 * This function calculates when the session timeout warning should display and logs the time in the console.
 * It also validates if the provided `dynamicValue` is a number and formats the warning time accordingly.
 *
 * @param {string | number} dynamicValue - The value used to calculate the session timeout warning time.
 * @param {string} initialOrUpdate - Indicates whether the log is for the initial session timeout or an update.
 *
 * @returns {void}
 *
 * Key Steps:
 * 1. Converts `dynamicValue` to a number and checks if it's valid.
 * 2. Calculates the session timeout warning time.
 * 3. Logs the formatted warning time in the `America/New_York` timezone.
 * 4. Logs a message if the `dynamicValue` is not a valid number.
 *
 * @example
 * logWarningPopupTime(300000, 'Initial'); // Logs: "Initial session timeout warning to display at: [calculated time]"
 */


/**
 * Initializes the session timeout widget for the application.
 *
 * This function sets up the session timeout mechanism based on the user's configuration and environment.
 * It displays a warning dialog before the session times out and redirects the user to the appropriate URL if they remain inactive.
 *
 * @param {FeatureConfigService} [featureConfig] - Optional service providing configuration values for session timeout settings.
 *
 * @returns {void}
 *
 * Key Steps:
 * 1. Checks if the session timeout widget (`stwInitialized`) is already initialized.
 * 2. Retrieves configuration values such as backend reset timer URL, logout URL, and timeout warning times.
 * 3. Initializes the session timeout widget with the provided or default values.
 * 4. Logs the initial warning popup time using `logWarningPopupTime`.
 *
 * @example
 * // Initialize with a configuration service
 * initializeSessionTimeout(featureConfigService);
 *
 * @see {@link https://prod-cicm.uspto.gov/gitlab/myuspto/SessionTimeoutWidget SessionTimeoutWidget Documentation}
 */



