/**
 * Fetches the configuration parameters for the application.
 *
 * @param {any} configurationParameters - Parameters used for configuring the service request.
 * @returns {Observable<Iconfig>} - An observable that emits the configuration data.
 * @throws Will handle HTTP errors like 404 (Not Found) or 500 (Server Error).
 */
configurationParameters(configurationParameters: any): Observable<Iconfig> {
  return this.http.get<Iconfig>(
    `${this.serviceAccess.getFilingService()}/vl/application/utility/configs`
  ).pipe(
    catchError((error: HttpErrorResponse) => {
      if (error.status === 404) {
        console.error('Configuration not found (404). Please check the URL or configuration settings.');
      } else if (error.status === 500) {
        console.error('Internal server error (500). Please try again later or contact support.');
      } else {
        console.error('An unexpected error occurred:', error.message);
      }

      // Optionally, you can return a default value or rethrow the error
      return throwError(() => new Error('Failed to fetch configuration. Please try again later.'));
    })
  );
}
