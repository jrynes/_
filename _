
1. Navigate to the Git usr/bin Directory
Open a terminal (e.g., Git Bash) and navigate to the directory where OpenSSL is located:

bash
Copy
Edit
cd "C:\Program Files\Git\usr\bin"
2. Specify Custom Output Paths
When running OpenSSL commands, use absolute paths for the output files to direct them to your project’s certs directory (or anywhere you have write access).

Commands
1. Generate a Private Key
Save the private key directly to your project directory:

bash
Copy
Edit
openssl genrsa -des3 -out "C:/path/to/your/project/certs/server.key" 2048
2. Generate a CSR
Use the custom openssl.cnf file from your project directory and save the CSR to the same location:

bash
Copy
Edit
openssl req -new -sha256 \
    -key "C:/path/to/your/project/certs/server.key" \
    -out "C:/path/to/your/project/certs/server.csr" \
    -subj "/CN=localhost" \
    -reqexts SAN \
    -config "C:/path/to/your/project/certs/openssl.cnf"
3. Generate a Self-Signed Certificate
Use the CSR and private key to generate the certificate:

bash
Copy
Edit
openssl x509 -req -days 3650 \
    -in "C:/path/to/your/project/certs/server.csr" \
    -signkey "C:/path/to/your/project/certs/server.key" \
    -out "C:/path/to/your/project/certs/server.crt" \
    -extensions SAN \
    -extfile "C:/path/to/your/project/certs/openssl.cnf"
4. Create an Unprotected Private Key (Optional)
If you want to remove the password from the private key:

Make a copy of the protected key:

bash
Copy
Edit
cp "C:/path/to/your/project/certs/server.key" "C:/path/to/your/project/certs/server.key.copy"
Remove the password:

bash
Copy
Edit
openssl rsa \
    -in "C:/path/to/your/project/certs/server.key.copy" \
    -out "C:/path/to/your/project/certs/server.key"
Key Adjustments for Your Setup
Keep Files in Your Project Directory: By specifying absolute paths, all generated files (server.key, server.csr, server.crt) will be stored in your certs directory under your project.

Ensure the openssl.cnf File is Accessible:

Copy the openssl.cnf file from C:\Program Files\Git\usr\ssl\openssl.cnf to your project’s certs directory (where you have write permissions).
Edit it to include the [ SAN ] section as follows:
ini
Copy
Edit
[ SAN ]
subjectAltName=DNS:localhost
Specify Full Paths to Files in Every Command: This ensures that the outputs are saved where you want them, even though the commands must be run from the usr/bin directory.

Final Setup Example
After running these commands, your certs directory in your project should look like this:

vbnet
Copy
Edit
project/
  certs/
    openssl.cnf
    server.key
    server.key.copy (optional)
    server.csr
    server.crt
Test the Setup
Verify that the server.crt file includes the subjectAltName field:
bash
Copy
Edit
openssl x509 -in "C:/path/to/your/project/certs/server.crt" -text -noout
Look for:
markdown
Copy
Edit
X509v3 Subject Alternative Name:
    DNS:localhost
